#include <io>

int read_str(char *s, int len){
    return read(0, s, len);
}

void println(){
    int ln = 10;
    write(1, &ln, 1);
}

void print_sp(){
    int sp = 32;
    write(1, &sp, 1);
}

void prefix_function (char* s, int len, int* pi) {
    int n = len;

    int res[100];
    res[0] = 0;
    char s2[100];
    for (int i = 0; i < len; i = i + 1)
        s2[i] = *(s + i);
    for (i = 1; i < n; i = i + 1) {
            int j = res[i - 1];
            while (j > 0 & s2[i] != s2[j])
                    j = res[j - 1];
            if (s2[i] == s2[j])
                j = j + 1;
            res[i] = j;
    }
    for (i = 0; i < n; i = i + 1)
        *(pi + i) = res[i];
    return;
}

void copy_str(char *dest, int shift, char* t, int len){
    for (int i = 0; i < len; i = i + 1)
      *(dest + shift + i) = *(t + i);
}

int kmp(char* t, int len_t, char* s, int len_s, int* res){
    int pi[1000];
    char a[1000];
    copy_str(a, 0, t, len_t);
    a[len_t] = 0;
    copy_str(a, len_t + 1, s, len_s);
    int len = len_t + 1 + len_s;

    prefix_function(a, len, pi);

    int c = 0;
    int val[100];

    for (int i = len_t + 1; i < len; i = i + 1)
        if (pi[i] == len_t) {
            val[c] = i - len_t - 1;
            c = c + 1;
        }
    for (i = 0; i < c; i = i + 1)
       *(res + i) = val[i];
    return c;
}

void print_str(char *s, int len){
    write(1, s, len);
}

int main(){
    char* t;
    int len_t = read_str(t, 3);
    print_str(t, 3);
    return 0;
    char* s;

    int len_s = read_str(s, 7);
    int res[1000];
    int ans = 0;
    kmp(t, len_t, s, len_s, res);

    write_num(1, ans);
    println();
    for (int i = 0; i < ans; i = i + 1) {
        write_num(1, res[i]);
        print_sp();
    }
    println();
    return 0;
}
