int write(int fd, char* buf, int count) {
    asm {
mov rax, 1
mov rdi, qword[rbp + 16]
mov rsi, qword[rbp + 24]
mov rdx, qword[rbp + 32]
syscall
    }
    return;
}

int read(int fd, char* buf, int count) {
    asm {
mov rax, 0
mov rdi, qword[rbp + 16]
mov rsi, qword[rbp + 24]
mov rdx, qword[rbp + 32]
syscall
    }
    return;
}

int read_num(int fd) {
    int num = 0;
    int t = 0;
    char buf[1];
    read(fd, buf, 1);
    while (buf[0] != 32 & buf[0] != 10) {
        t = buf[0];
        num = num * 10 + t - 48;
        read(fd, buf, 1);
    }
    return num;
}

void write_num(int fd, int num) {
    if (num < 0) {
        write(fd, "-", 1);
        num = -num;
    }
    char buf[20];
    char a[1];
    int last = 19;
    while (num != 0) {
        buf[last] = 48 + num % 10;
        num = num / 10;
        last = last - 1;
    }
    write(fd, buf + last + 1, 19 - last);
}


